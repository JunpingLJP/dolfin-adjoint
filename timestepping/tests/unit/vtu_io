#!/usr/bin/env python3

# Copyright (C) 2013 University of Oxford
# Copyright (C) 2014-2017 The University of Edinburgh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, version 3 of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import numpy;  numpy.random.seed(0)

from dolfin import *
from timestepping import *

mesh = RectangleMesh(Point(0.0, 0.0), Point(1.0, 1.0), 10, 10)

for mesh, e in [(UnitIntervalMesh(10), [("CG", 1), ("CG", 2), ("CG", 3), ("DG", 0), ("DG", 1), ("DG", 2), ("DG", 3)]),
                (UnitSquareMesh(10, 10), [("CG", 1), ("CG", 2), ("DG", 0), ("DG", 1), ("DG", 2)]),
                (UnitCubeMesh(10, 10, 10), [("CG", 1), ("CG", 2), ("DG", 0), ("DG", 1), ("DG", 2)])]:
  for args in e:
    space = FunctionSpace(mesh, *args)
    F = Function(space)
    F.vector().set_local(numpy.random.random(F.vector().local_size()))
    F.vector().apply("insert")

    filename = "%iD_P%i_%s" % (mesh.geometry().dim(), args[1], args[0])
    write_vtu(filename, F)
    
    space = FunctionSpace(mesh, space.ufl_element() * space.ufl_element())
    F = Function(space)
    F.vector().set_local(numpy.random.random(F.vector().local_size()))
    F.vector().apply("insert")

    filename = "%iD_Mixed_P%i_%s" % (mesh.geometry().dim(), args[1], args[0])
    write_vtu(filename, F)
    
    space = VectorFunctionSpace(mesh, *args) 
    F = Function(space)
    F.vector().set_local(numpy.random.random(F.vector().local_size()))
    F.vector().apply("insert")

    filename = "%iD_Vector_P%i_%s" % (mesh.geometry().dim(), args[1], args[0])
    write_vtu(filename, F)
